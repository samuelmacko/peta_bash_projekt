#!/bin/bash

scriptDir=$(cd "$(dirname "${BASH_SOURCE[0]}")" &>/dev/null && pwd -P)

dataDir="${scriptDir}/data"
backupDir="${scriptDir}/backup"
force=false

order=("log" "fak" "sem" "pre" "stu" "zap" "zna")

pomoc() {
	cat << EOF
pomoooooc
EOF
}

die() {
	echo "$1" >&2
	exit "$2"
}

validateArgs() {

	local argsNum=$(($1 - 1))
	local min="$2"
	local max="$3"

	if [[ "$argsNum" -lt "$min" ]]; then
		die "nedostatek parametru" 1
    fi

    if [[ "$argsNum" -gt "$max" ]]; then
		die "nadbytecne parametry" 1
    fi
}

parseParams() {

	local inputParams="$@"

	while :; do
		case "${1-}" in
		-f )
			force=true
			shift
			;;
		-d )
			dataDir="${2-}"
			shift
			;;
		-b )
			backupDir="${2-}"
			shift
			;;
		-?*)
			die "neznam: '$1'" 1
			;;
		*) break ;;
		esac
		shift
	done

	if [[ ! -d "$dataDir" ]] && ! mkdir -p "$dataDir"; then
		die "nepodarilo sa vytvorit adresar '${dataDir}'" 1
	fi

	local logsFile="${dataDir}/log"

	if [[ ! -f "$logsFile" ]] && ! touch "$logsFile"; then
		die "nepodarilo sa vytvorit soubor '${logsFile}'" 1
	fi

	local facultiesFile="${dataDir}/fak"
	local semestersFile="${dataDir}/sem"
	local courseFile="${dataDir}/pre"

	local logMessage="$(date "+%Y-%m-%d %H:%M.%S") $$ ${LOGNAME:-x} $0 $inputParams"
	echo "$logMessage" >> $logsFile

	local args=("$@")
	local command="${args[0]-}"

	case "$command" in
        "pomoc")

            pomoc
            exit 0
            ;;
            
        "cesta-adresář" | "cesta-adresar")

			validateArgs "$#" 0 0

            echo "$dataDir"
            exit 0
            ;;
            
        "smaž-adresář" | "smaz-adresar")

			validateArgs "$#" 0 0

            if [[ "$force" != true ]]; then
                die "neni -f" 1
            fi

            rm -rf "$dataDir"
            exit 0
            ;;
            
        "log-výběr" | "log-vyber")

			validateArgs "$#" 0 1

			local regex="${2}"

            if [[ ! -z "$regex" ]]; then

                if ! grep -qE "$regex" "$logsFile"; then
                    die "zadna zhoda" 1
                fi

                grep -E "$regex" "$logsFile"
				
            else
                cat "$logsFile"
            fi

            exit 0
            ;;
            
        "log-poslední" | "log-posledni")

			validateArgs "$#" 0 1

			local count="${2-10}"

            if [[ "$#" -eq 2 ]]; then

                if [[ ! "$count" =~ ^[0-9]+$ ]]; then
                    die "musi byt cislo" 1
                fi

            fi
            
            if [[ "$#" -eq 1 ]]; then
                tail -n "$count" "$logsFile" | nl -ba | sort -nr
            else
                tail -n "$count" "$logsFile"
            fi

            exit 0
            ;;

		"fakulta-výpis" | "fakulta-vypis")

			validateArgs "$#" 0 1

			if [[ ! -f "$facultiesFile" ]]; then
				die "fakulty nene" 1
			fi

			printf "%-8s | %s\n" "Fakulta" "Název"
			printf "%s\n" "--------------------------"

			local id="${2-}"

            if [[ ! -z "$id" ]]; then

				local name=$(grep -w "^$id" "$facultiesFile" | cut -d '|' -f 2)

				if [[ -z "$name" ]]; then
					die "fakulta neexistuje" 1
				else
					echo $name
					exit 0
				fi

			else

				while IFS="|" read -r idCol nameCol; do
					printf "%-8s | %s\n" "$idCol" "$nameCol"
				done < <(sort "$facultiesFile")

			fi

			exit 0
			;;

		"fakulta-smaž" | "fakulta-smaz")

			validateArgs "$#" 1 1

			if [[ ! -f "$facultiesFile" ]]; then
				die "fakulty nene" 1
			fi

			local id="${args[1]}"

			if ! grep -q "^${id}|" "$facultiesFile"; then
				die "fakulta neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"

			while IFS='|' read -r idCol nameCol; do
				if [[ "$id" != "$idCol" ]]; then
					echo "${idCol}|${nameCol}" >> "$tempFile"
				fi
			done < "$facultiesFile"

			mv "$tempFile" "$facultiesFile"

			exit 0
			;;

        "fakulta-nová" | "fakulta-nova")

			validateArgs "$#" 2 2

			if [[ ! -f "$facultiesFile" ]] && ! touch "$facultiesFile"; then
				die "nepodarilo sa vytvorit soubor '${facultiesFile}'" 1
			fi

			local id="${args[1]}"
			local name="${args[2]}"
			
			if [[ ${#id} -gt 8 ]]; then
				die "id prilis dlouhe" 1
			fi
			
			if grep -q "^${id}|" "$facultiesFile"; then
				die "fakulta jiz existuje" 1
			fi
			
			echo "${id}|${name}" >> "$facultiesFile"

			exit 0
			;;

        "fakulta-název" | "fakulta-nazev")

			# TODO: Nelze smazat fakultu, která je použita v registru semestrů (tato podmínka se kontroluje až v rámci kontroly sekce nastavování semestrů).

			validateArgs "$#" 2 2

			if [[ ! -f "$facultiesFile" ]]; then
				die "fakulty nene" 1
			fi

			local id="${args[1]}"
			local name="${args[2]}"

			if ! grep -q "^${id}|" "$facultiesFile"; then
				die "fakulta neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"

			while IFS='|' read -r idCol nameCol; do
				if [[ "$id" == "$idCol" ]]; then
					echo "${id}|${name}" >> "$tempFile"
				else
					echo "${idCol}|${nameCol}" >> "$tempFile"
				fi
			done < "$facultiesFile"

			mv "$tempFile" "$facultiesFile"

			exit 0
			;;

		"záloha" | "zaloha")

			validateArgs "$#" 0 0

			if [[ ! -d "$backupDir" ]] && ! mkdir -p "$backupDir"; then
				die "nepodarilo sa vytvorit adresar '${backupDir}'" 1
			fi

			local backupFile="${backupDir}/$(date '+%Y-%m-%d_%H-%M-%S').tar.gz"
    
			if ! tar -czf "$backupFile" -C "$dataDir" .; then
				die "nepodarilo se vytvorit zalohu" 1
			fi

			exit 0
			;;

		"zálohy" | "zalohy")

			validateArgs "$#" 0 0

			if [[ ! -d "$backupDir" ]]; then
				die "zalohy nene" 1
			fi
			
			ls "$backupDir" | sort -r

			exit 0
			;;
			
		"zálohy-smaž" | "zalohy-smaz")

			validateArgs "$#" 0 0

			if [[ ! -d "$backupDir" ]]; then
				die "zalohy nene" 1
			fi

			local backups=($(ls "$backupDir" | sort -r))
			
			if [[ "${#backups[@]}" -gt 2 ]]; then
				for backup in "${backups[@]:2}"; do
					rm "${backupDir}/${backup}"
				done
			fi

			exit 0
			;;

		"obnova")

			validateArgs "$#" 1 1

			if [[ ! -d "$backupDir" ]]; then
				die "zalohy nene" 1
			fi

			local backupFile="${args[1]}"

			if [[ ! -f "${backupDir}/${backupFile}" ]]; then
				die "zadana zaloha neexistuje" 1
			fi

			if ! tar -xzf "${backupDir}/${backupFile}" -C "$dataDir"; then
				die "chyba pri obnove" 1
			fi

			exit 0
			;;

		"data-md5")

			validateArgs "$#" 0 0

			for fileName in "${order[@]}"; do

				local filePath="${dataDir}/${fileName}" 

				if [[ -f "$filePath" ]]; then
					printf "%-4s %s\n" "$fileName" $(md5sum "$filePath" | cut -d ' ' -f1)
				else
					printf "%-4s %s\n" "$fileName" "d41d8cd98f00b204e9800998ecf8427e"
				fi

			done

			exit 0
			;;

		"data-velikost")

			validateArgs "$#" 0 0

			for fileName in "${order[@]}"; do

				local filePath="${dataDir}/${fileName}" 

				if [[ -f "$filePath" ]]; then

					printf "%-4s %s\n" "$fileName" $(stat -c%z "$filePath")
					# printf "%-4s %s\n" "$fileName" $(stat -f%z "$filePath")
				else
					printf "%-4s %s\n" "$fileName" "0"
				fi

			done

			exit 0
			;;

		"data-čas" | "data-cas")

			validateArgs "$#" 0 0

			for fileName in "${order[@]}"; do

				local filePath="${dataDir}/${fileName}" 

				if [[ -f "$filePath" ]]; then
					printf "%-4s %s\n" "$fileName" $(stat -c "%y" "$filePath" | cut -d '.' -f1)
				else
					printf "%-4s %s\n" "$fileName" "0000-00-00 00:00:00"
				fi

			done

			exit 0
			;;

		"semestr-datum")

			validateArgs "$#" 3 3

			if [[ ! -f "$semestersFile" ]]; then
				die "semestry nene" 1
			fi

			local faculty="${args[1]}"
			local id="${args[2]}"
			local start="${args[3]}"

			# TODO overenie formatu datumu z argumentu
			# toto nefunguje na macu, vyskusat na linuxovej masine
			# if ! date -d "$date" "+%Y-%m-%d" >/dev/null 2>&1; then
			# 	die "Neplatný formát data: $date (očekáváno YYYY-MM-DD)"
			# fi

			# TODO overenie toho ci zadany datum spada do rozmedzia

			if ! grep -q "^${faculty}|${id}" "$semestersFile"; then
				die "semestr neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol idCol startCol nameCol; do
				if [[ "$faculty" == "$facultyCol" ]] && [[ "$id" == "$idCol" ]]; then
					echo "${facultyCol}|${idCol}|${start}|${nameCol}" >> "$tempFile"
				else
					echo "${facultyCol}|${idCol}|${startCol}|${nameCol}" >> "$tempFile"
				fi
			done < "$semestersFile"

			mv "$tempFile" "$semestersFile"

			exit 0
			;;

		"semestr-název" | "semestr-nazev")

			validateArgs "$#" 3 3

			if [[ ! -f "$semestersFile" ]]; then
				die "semestry nene" 1
			fi

			local faculty="${args[1]}"
			local id="${args[2]}"
			local name="${args[3]}"

			if ! grep -q "^${faculty}|${id}" "$semestersFile"; then
				die "semestr neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol idCol startCol nameCol; do
				if [[ "$faculty" == "$facultyCol" ]] && [[ "$id" == "$idCol" ]]; then
					echo "${facultyCol}|${idCol}|${startCol}|${name}" >> "$tempFile"
				else
					echo "${facultyCol}|${idCol}|${startCol}|${nameCol}" >> "$tempFile"
				fi
			done < "$semestersFile"

			mv "$tempFile" "$semestersFile"

			exit 0
			;;

		"semestr-výpis" | "semestr-vypis")

			validateArgs "$#" 0 2

			if [[ ! -f "$semestersFile" ]]; then
				die "semestry nene" 1
			fi

			printf "%-8s | %s | %s | %s\n" "Fakulta" "Semestr" "Od" "Název"
			printf "%s\n" "-----------------------------------------"

			local faculty="${2-}"
			local semester="${3-}"

			while IFS="|" read -r facultyCol idCol startCol nameCol; do

				if [[ ! -z "$semester" ]] && [[ "$semester" != "$idCol" ]]; then
					continue
				elif [[ ! -z "$faculty" ]] && [[ "$faculty" != "$facultyCol" ]]; then
					continue
				fi

				printf "%s | %s | %s | %s\n" "$facultyCol" "$idCol" "$startCol" "$nameCol"

			done < <(sort -t "|" -k3,3 -k1,1 "$semestersFile")

			exit 0
			;;

		"semestr-smaž" | "semestr-smaz")

			validateArgs "$#" 2 2

			if [[ ! -f "$semestersFile" ]]; then
				die "semestry nene" 1
			fi

			local faculty="${args[1]}"
			local id="${args[2]}"

			if ! grep -q "^${faculty}|${id}" "$semestersFile"; then
				die "semestr neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol idCol startCol nameCol; do
				if [[ "$faculty" != "$facultyCol" ]] || [[ "$id" != "$idCol" ]]; then
					echo "${facultyCol}|${idCol}|${startCol}|${nameCol}" >> "$tempFile"
				fi
			done < "$semestersFile"

			mv "$tempFile" "$semestersFile"

			exit 0
			;;

		"semestr-nový" | "semestr-novy")

			validateArgs "$#" 4 4

			if [[ ! -f "$semestersFile" ]] && ! touch "$semestersFile"; then
				die "nepodarilo sa vytvorit soubor '${semestersFile}'" 1
			fi

			local faculty="${args[1]}"
			local id="${args[2]}"
			local start="${args[3]}"
			local name="${args[4]}"
			
			if [[ ${#id} -gt 8 ]]; then
				die "id prilis dlouhe" 1
			fi

			# TODO overenie formatu datumu z argumentu
			# toto nefunguje na macu, vyskusat na linuxovej masine
			# if ! date -d "$date" "+%Y-%m-%d" >/dev/null 2>&1; then
			# 	die "Neplatný formát data: $date (očekáváno YYYY-MM-DD)"
			# fi

			# TODO overenie toho ci zadany datum spada do rozmedzia
			
			if [[ ! -f "$facultiesFile" ]] || ! grep -q "^${faculty}" "$facultiesFile"; then
				die "fakulta neexistuje" 1
			fi

			if grep -q "^${faculty}|${id}" "$semestersFile"; then
				die "semestr jiz existuje" 1
			fi

			echo "${faculty}|${id}|${start}|${name}" >> "$semestersFile"

			exit 0
			;;

		"předmět-výpis" | "predmet-vypis")

			validateArgs "$#" 0 3

			if [[ ! -f "$courseFile" ]]; then
				die "predmety nene '${courseFile}'" 1
			fi

			printf "%s | %s | %s | %s | %s | %s\n" "Fakulta" "Semestr" "Kurz" "Uk" "Kr" "Název"
			printf "%s\n" "----------------------------------------------------"

			if [[ ! -f "$courseFile" ]]; then
				die "semestry nene" 1
			fi

			local faculty="${2-}"
			local semester="${3-}"
			local code="${4-}"

			local found=false

			while IFS="|" read -r facultyCol semesterCol codeCol nameCol typeCol creditsCol; do

				if [[ ! -z "$code" ]] && [[ "$code" != "$codeCol" ]]; then
					continue
				elif [[ ! -z "$semester" ]] && [[ "$semester" != "$semesterCol" ]]; then
					continue
				elif [[ ! -z "$faculty" ]] && [[ "$faculty" != "$facultyCol" ]]; then
					continue
				fi

				found=true

				# TODO vycentrovat, vsude
				printf "%s | %s | %s | %s | %s | %s\n" "$facultyCol" "$semesterCol" "$codeCol" "$typeCol" "$creditsCol" "$nameCol"

			done < <(sort -t "|" -k1,1 -k2,2 -k3,3 "$courseFile")

			if [[ "$found" != true ]]; then
				die "nic se nenaslo" 1
			fi

			exit 0
			;;

		"předmět-smaž" | "predmet-smaz")

			validateArgs "$#" 3 3

			if [[ ! -f "$courseFile" ]]; then
				die "predmety nene" 1
			fi

			local faculty="${args[1]}"
			local semester="${args[2]}"
			local code="${args[3]}"

			if ! grep -q "^${faculty}|${semester}|${code}" "$courseFile"; then
				die "predmet neexistuje" 1
			fi

			# TODO Nelze smazat předmět, který má student zapsaný

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol semesterCol codeCol nameCol typeCol creditsCol; do
				if [[ "$faculty" != "$facultyCol" ]] || [[ "$semester" != "$semesterCol" ]] || [[ "$code" != "$codeCol" ]]; then
					echo "${facultyCol}|${semesterCol}|${codeCol}|${nameCol}|${typeCol}|${creditsCol}" >> "$tempFile"
				fi
			done < "$courseFile"

			mv "$tempFile" "$courseFile"

			exit 0
			;;

		"předmět-ukončení" | "predmet-ukonceni")

			validateArgs "$#" 4 4

			if [[ ! -f "$courseFile" ]]; then
				die "predmety nene" 1
			fi

			local faculty="${args[1]}"
			local semester="${args[2]}"
			local code="${args[3]}"
			local newType="${args[4]}"

			if ! [[ "${newType}" =~ ^(zk|k|z)$ ]]; then
				die "neplatne zakonceni" 1
			fi

			if ! grep -q "^${faculty}|${semester}|${code}" "$courseFile"; then
				die "predmet neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol semesterCol codeCol nameCol typeCol creditsCol; do
				if [[ "$faculty" == "$facultyCol" ]] && [[ "$semester" == "$semesterCol" ]] && [[ "$code" == "$codeCol" ]]; then
					echo "${facultyCol}|${semesterCol}|${codeCol}|${nameCol}|${newType}|${creditsCol}" >> "$tempFile"
				else
					echo "${facultyCol}|${semesterCol}|${codeCol}|${nameCol}|${typeCol}|${creditsCol}" >> "$tempFile"
				fi
			done < "$courseFile"

			mv "$tempFile" "$courseFile"

			exit 0
			;;

		"předmět-nový" | "predmet-novy")

			validateArgs "$#" 6 6

			if [[ ! -f "$courseFile" ]] && ! touch "$courseFile"; then
				die "nepodarilo sa vytvorit soubor '${courseFile}'" 1
			fi

			local faculty="${args[1]}"
			local semester="${args[2]}"
			local code="${args[3]}"
			local name="${args[4]}"
			local type="${args[5]}"
			local credits="${args[6]}"
			
			if [[ ! -f "$facultiesFile" ]] || ! grep -q "^${faculty}" "$facultiesFile"; then
				die "fakulta neexistuje" 1
			fi
			
			if [[ ! -f "$semestersFile" ]] || ! grep -q "^${faculty}|${id}" "$facultiesFile"; then
				die "fakulta neexistuje" 1
			fi
			
			if ! [[ "${code}" =~ ^[A-Za-z][A-Za-z0-9_]{0,7}$ ]]; then
				die "kod predmetu v zlem tvaru" 1
			fi

			if grep -qi "^[^|]*|[^|]*|${code}|" "$courseFile"; then
				die "predmet jiz existuje" 1
			fi

			if ! [[ "${type}" =~ ^(zk|k|z)$ ]]; then
				die "neplatne zakonceni" 1
			fi

			if ! [[ "${credits}" =~ ^[0-9]+$ ]] || (( credits < 0 || credits > 20 )); then
				die "neplatne kredity" 1
			fi

			echo "${faculty}|${semester}|${code}|${name}|${type}|${credits}" >> "$courseFile"

			exit 0
			;;

		"předmět-kredity" | "predmet-kredity")

			validateArgs "$#" 4 4

			if [[ ! -f "$courseFile" ]]; then
				die "predmety nene" 1
			fi

			local faculty="${args[1]}"
			local semester="${args[2]}"
			local code="${args[3]}"
			local newCredits="${args[4]}"

			if ! [[ "${newCredits}" =~ ^[0-9]+$ ]] || (( newCredits < 0 || newCredits > 20 )); then
				die "neplatne kredity" 1
			fi

			if ! grep -q "^${faculty}|${semester}|${code}" "$courseFile"; then
				die "predmet neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol semesterCol codeCol nameCol typeCol creditsCol; do
				if [[ "$faculty" == "$facultyCol" ]] && [[ "$semester" == "$semesterCol" ]] && [[ "$code" == "$codeCol" ]]; then
					echo "${facultyCol}|${semesterCol}|${codeCol}|${nameCol}|${typeCol}|${newCredits}" >> "$tempFile"
				else
					echo "${facultyCol}|${semesterCol}|${codeCol}|${nameCol}|${typeCol}|${creditsCol}" >> "$tempFile"
				fi
			done < "$courseFile"

			mv "$tempFile" "$courseFile"

			exit 0
			;;

		"předmět-název" | "predmet-nazev")

			validateArgs "$#" 4 4

			if [[ ! -f "$courseFile" ]]; then
				die "predmety nene" 1
			fi

			local faculty="${args[1]}"
			local semester="${args[2]}"
			local code="${args[3]}"
			local newName="${args[4]}"

			if ! grep -q "^${faculty}|${semester}|${code}" "$courseFile"; then
				die "predmet neexistuje" 1
			fi

			local tempFile="${dataDir}/tmp"
			touch "$tempFile"
			
			while IFS="|" read -r facultyCol semesterCol codeCol nameCol typeCol creditsCol; do
				if [[ "$faculty" == "$facultyCol" ]] && [[ "$semester" == "$semesterCol" ]] && [[ "$code" == "$codeCol" ]]; then
					echo "${facultyCol}|${semesterCol}|${codeCol}|${newName}|${typeCol}|${creditsCol}" >> "$tempFile"
				else
					echo "${facultyCol}|${semesterCol}|${codeCol}|${nameCol}|${typeCol}|${creditsCol}" >> "$tempFile"
				fi
			done < "$courseFile"

			mv "$tempFile" "$courseFile"

			exit 0
			;;

        *)
            die "neznamy prikaz" 1
            ;;
    esac

	exit 0
}

parseParams "$@"

